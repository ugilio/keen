/*
 * generated by Xtext 2.10.0
 */
package it.cnr.istc.keen.ui.outline

import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode
import it.cnr.istc.keen.ddl.Ddl
import it.cnr.istc.keen.ddl.ParType
import it.cnr.istc.keen.ddl.TransitionConstraint
import it.cnr.istc.keen.ddl.RenewableResourceComponentType
import it.cnr.istc.keen.ddl.ConsumableResourceComponentType
import it.cnr.istc.keen.ddl.Synchronization
import it.cnr.istc.keen.ddl.Problem

/**
 * Customization of the default outline structure.
 *
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#outline
 */
class DdlOutlineTreeProvider extends DefaultOutlineTreeProvider {

	//Hide root "Ddl" node	
    protected def _createChildren(DocumentRootNode parentNode, Ddl ddl) {
    	val dom = ddl.domain;
    	val prob = ddl.problem;
    	if (dom!=null)
    		createNode(parentNode,dom);
    	if (prob!=null)
    		createNode(parentNode,prob);
    }

    
    //Leaf nodes:
    protected def _isLeaf(ParType n) {
    	return true;
    }

    protected def _isLeaf(RenewableResourceComponentType n) {
    	return true;
    }

    protected def _isLeaf(ConsumableResourceComponentType n) {
    	return true;
    }

    protected def _isLeaf(TransitionConstraint n) {
    	return true;
    }

    protected def _isLeaf(Synchronization n) {
    	return true;
    }

    protected def _isLeaf(Problem n) {
    	return true;
    }
}
