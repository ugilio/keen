/*
 * generated by Xtext 2.10.0
 */
package it.cnr.istc.keen.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import it.cnr.istc.keen.naming.DdlNameProvider
import org.eclipse.emf.ecore.EObject
import it.cnr.istc.keen.ddl.Ddl

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class DdlLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	private DdlImageProvider imProv;

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}
	
	//For debugging:
	/*
	override doGetText(Object ele) {
		return super.doGetText(ele) + ": " + ele.getClass().simpleName;
	}
	*/

	override doGetText(Object ele) {
		return
			if (ele instanceof EObject)
				DdlNameProvider.getObjName(ele as EObject)
			else
				super.doGetText(ele);
	}
	
	def image(Ddl o) {
		val eo = (o as EObject);
		val ext = eo.eResource?.URI?.fileExtension?.toLowerCase();
		if ("pdl".equals(ext))
			return imProv.pdlImage
		else
			return imProv.ddlImage;
	}
	
	def image(EObject o) {
		return imProv.image(o.eClass);
	}
}
